{"version":3,"sources":["components/Card.js","components/Home.js","components/NewsItem.js","components/Main.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["Card","news","this","props","path","id","react_default","a","createElement","className","Link","to","pathname","state","object","title","by","descendants","Component","Home","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","newsList","start","stop","currentNews","_this2","axios","get","then","result","index","data","newArrayList","push","setState","catch","err","displayPageContent","map","undefined","components_Card","key","NewsItem","newsObject","location","getComments","kids","number","console","log","score","text","href","url","Main","Switch","Route","exact","component","Header","src","App","BrowserRouter","components_Header","components_Main","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c309f0f1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nclass Card extends Component {\r\n  render() {\r\n    let news = this.props.news;\r\n    let path = \"/news/\" + news.id;\r\n    return (\r\n      <li className=\"list-item\">\r\n        <Link to={{ pathname: path, state: { object: news } }}>\r\n          <div>\r\n            <div className=\"news-list-title\">\r\n              <strong> {news.title}</strong>\r\n            </div>\r\n            <div className=\"news-list-author-comment\">\r\n              By : {news.by}, {news.descendants} comments\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Card from \"./Card\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      newsList: [],\r\n      start: 0,\r\n      stop: 10,\r\n      currentNews: 0\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    axios\r\n      .get(\"https://hacker-news.firebaseio.com/v0/topstories.json\")\r\n      .then(result => {\r\n        for (let index in result.data) {\r\n          let news = result.data[index];\r\n\r\n          if (index >= this.state.start && index <= this.state.stop) {\r\n            axios\r\n              .get(\r\n                \"https://hacker-news.firebaseio.com/v0/item/\" + news + \".json\"\r\n              )\r\n              .then(result => {\r\n                let newArrayList = this.state.newsList;\r\n                newArrayList.push(result.data);\r\n                this.setState({ newsList: newArrayList });\r\n                //  });\r\n              });\r\n          } else {\r\n            continue;\r\n          }\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.err = err;\r\n      });\r\n  }\r\n  render() {\r\n    let displayPageContent = this.state.newsList.map((news, index) => {\r\n      if (news !== undefined) {\r\n        return <Card key={index} news={news} />;\r\n      }\r\n    });\r\n    return (\r\n      <div>\r\n        <ul className=\"news-list\">{displayPageContent}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\n\r\nclass NewsItem extends Component {\r\n  componentWillMount() {\r\n    this.newsObject = this.props.location.state.object;\r\n    this.getComments();\r\n  }\r\n\r\n  getComments() {}\r\n  render() {\r\n    let kids = this.newsObject.kids.map(number => {\r\n      return <li key={number}>{number}</li>;\r\n    });\r\n    console.log(this.newsObject);\r\n    return (\r\n      <div className=\"news-info-page\">\r\n        <div className=\"title\">{this.newsObject.title}</div>\r\n        <div className=\"author\">{this.newsObject.by}</div>\r\n        <div className=\"score\">{this.newsObject.score}</div>\r\n        <div className=\"text\">{this.newsObject.text}</div>\r\n        <div>\r\n          <ul>{kids}</ul>\r\n        </div>\r\n        <div>\r\n          <a href={this.newsObject.url}>link</a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewsItem;\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport Home from \"./Home\";\r\nimport NewsItem from \"./NewsItem\";\r\nclass Main extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/news/:id\" component={NewsItem} />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"header\">\r\n        <Link to={{ pathname: \"/\" }}>\r\n          {\" \"}\r\n          <img src=\"images/hn2.jpg\" className=\"page-icon\" />\r\n        </Link>\r\n        <span className=\"page-Title\"> HACKER NEWS</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Main from \"./components/Main\";\nimport Header from \"./components/Header\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <div>\n            <Header />\n            <Main />\n          </div>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/reset.css\";\nimport \"./css/layout.css\";\nimport \"./css/style.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}